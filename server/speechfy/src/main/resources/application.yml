spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
  jpa:
    hibernate:
      ddl-auto:  none
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true
  security:
    oauth2:
      key:
        private: ${OAUTH2_JWT_PRIVATE_KEY_PATH}
        public: ${OAUTH2_JWT_PUBLIC_KEY_PATH}
      client:
        jwt:
          access-token-time: 600
          refresh-token-time: 7200
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH2_KAKAO_REDIRECT_URI}
            scope:
              - profile_nickname
              - profile_image
  data:
    redis:
#      docker에선 redis-server로 변경
      host: localhost
      port: 6379
  jackson:
    serialization:
      wrap-root-value: false

logging:
  level:
    root: info
    sql: debug
    org.hibernate.SQL: debug
    #    org.hibernate.type: trace
    org.springframework.security: debug
    com.ssafy.speechfy: debug

openai:
  api:
    key: ${OPENAI_API_KEY}

aws:
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME}
  cloudfront:
    domain: ${AWS_CLOUDFRONT_DOMAIN}
  region: ${AWS_REGION}
  access-key: ${AWS_ACCESS_KEY}
  secret-key: ${AWS_SECRET_KEY}
